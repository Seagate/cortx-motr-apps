#/*
# * COPYRIGHT 2014 SEAGATE LLC
# *
# * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
# * HEREIN, ARE THE EXCLUSIVE PROPERTY OF SEAGATE LLC,
# * ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
# * THE PRIOR WRITTEN PERMISSION OF SEAGATE TECHNOLOGY LIMITED,
# * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
# * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
# * EXCEPT AS ALLOWED BY THE TERMS OF SEAGATE LICENSES AND AGREEMENTS.
# *
# * YOU SHOULD HAVE RECEIVED A COPY OF SEAGATE'S LICENSE ALONG WITH
# * THIS RELEASE. IF NOT PLEASE CONTACT A SEAGATE REPRESENTATIVE
# * http://www.xyratex.com/contact
# *
# * Original author:  Ganesan Umanesan <ganesan.umanesan@seagate.com>
# * Original creation date: 10-Jan-2017
# */

#!/usr/bin/env bash
#
# This script clean install given Motr packages.
# It should work on Red Hat and Debian based systems.
#
# Ganesan Umanesan <ganesan.umanesan@seagate.com>
# 22/04/2020

#executables
c0cp='./c0cp'
c0rm='./c0rm'
c0cat='./c0cat'
fgen='./fgen'

#files
ofp='dwFile'
tar='Sage_Bunle'

#####
#runc()
#####
runc()
{ 
	echo ">>$@"
	echo ">>$@" >> $log
	eval "$@" 2>> $log
}

#####
#test()
#####
test()
{ 
	log="sfilet"	#logs
	out="fidout"	#fids
	bsz=$1			#bsize (default 4K)
	bsz=$((bsz))	#allow arithmetic
	inf=$2			#input filename
	
	# daily collection
	log="$log-$(date +%Y%m%d).log"
	out="$out-$(date +%Y%m%d).log"
	tar="$tar-$(date +%Y%m%d).tar"
	
	fsz=$(stat -c%s "$inf")	#filesize in bytes	
	log=$(pwd)/$log	#send to working directory
	out=$(pwd)/$out	#send to working directory

	# log='/dev/null'
	# out='/dev/stdout'

 	# log='/dev/stderr'
	# out='/dev/stdout'
	
	# echo $log
	# echo $out
	
	ofp=$(pwd)/$ofp	#send to working directory
	tar=$(pwd)/$tar	#send to working directory
	
	#move to executable directory
	pushd $(dirname $(dirname $0)) > /dev/null

	#check executables	
	if [[ ! -x "$c0cp" ]]; then
    	echo "error! file $c0cp is not executable nor found"
    	return 11
	fi
	if [[ ! -x "$c0cp" ]]; then
    	echo "error! file $c0cp is not executable nor found"
    	return 12
	fi
	if [[ ! -x "$c0cat" ]]; then
    	echo "error! file $c0cat is not executable nor found"
    	return 13
	fi
	if [[ ! -x "$c0rm" ]]; then
    	echo "error! file $c0rm is not executable nor found"
    	return 14
	fi
	if [[ ! -x "$fgen" ]]; then
    	echo "error! file $fgen is not executable nor found"
    	return 15
	fi
	
	echo "bsz = $bsz, fsz = $fsz, fname = $inf"	

	echo $(date)
	echo "+$(date)" >> $out
	echo "+$(date)" >> $log
	
	fid=$($fgen 2>> $log)
	printf "fid: %s" "$fid" >> $out
		
	#c0cp
	rm -f m0trace.* # clean up
	cmd="$c0cp $fid $inf $bsz"
	runc $cmd
	if [[ $? -ne 0 ]]; then
	  	#remove fid if possible
	  	$c0rm $fid -y 2>> $log 
	  	#bundle trace
	  	m0trace -Y -i $(ls m0trace.*) -o $(ls m0trace.*).yml
	  	tar -rvf $tar $(ls m0trace.*.yml)
	  	return 20
	fi
	   	
	#c0cat
	rm -f m0trace.* # clean up  		
	cmd="$c0cat $fid $ofp $bsz $fsz"
	runc $cmd
	if [[ $? -ne 0 ]]; then
	  	#remove fid if possible
	  	$c0rm $fid -y 2>> $log 	  		
	  	return 21
	fi

	#cmp		
	cmd="cmp $inf $ofp"
	runc $cmd
	if [[ $? -ne 0 ]]; then
	  	echo "error! compare failed!!"
	  	#bundle trace
	  	m0trace -Y -i $(ls m0trace.*) -o $(ls m0trace.*).yml
	  	tar -rvf $tar $(ls m0trace.*.yml)
	  	return 22
	fi
	
	#c0rm
	rm -f m0trace.* # clean up  		
	cmd="$c0rm $fid -y"
	runc $cmd
	if [[ $? -ne 0 ]]; then
	  	#remove fid if possible
	  	$c0rm $fid -y 2>> $log 	  		
	  	#bundle trace
	  	m0trace -Y -i $(ls m0trace.*) -o $(ls m0trace.*).yml
	  	tar -rvf $tar $(ls m0trace.*.yml)
	  	return 23
	fi
		  
	printf "\t [ OK ]\n" >> $out		
	fid=$($fgen 2>> $log)
	printf "fid: %s" "$fid" >> $out
		
	#c0cp_aync
	rm -f m0trace.* # clean up  		
	cmd="$c0cp $fid $inf $bsz -a 8"
	runc $cmd
	if [[ $? -ne 0 ]]; then
		#remove fid if possible
	  	$c0rm $fid -y 2>> $log 
	  	#bundle trace
	  	m0trace -Y -i $(ls m0trace.*) -o $(ls m0trace.*).yml
	  	tar -rvf $tar $(ls m0trace.*.yml)
	  	return 20
	fi
	   	
	#c0cat
	rm -f m0trace.* # clean up  		
	cmd="$c0cat $fid $ofp $bsz $fsz"
	runc $cmd
	if [[ $? -ne 0 ]]; then
	  	#remove fid if possible
	  	$c0rm $fid -y 2>> $log 	  		
	  	return 21
	fi

	#cmp		
	cmd="cmp $inf $ofp"
	runc $cmd
	if [[ $? -ne 0 ]]; then
	  	echo "error! compare failed!!"
	  	#bundle trace
	  	m0trace -Y -i $(ls m0trace.*) -o $(ls m0trace.*).yml
	  	tar -rvf $tar $(ls m0trace.*.yml)
	  	return 22
	fi
	
	#c0rm
	rm -f m0trace.* # clean up  		
	cmd="$c0rm $fid -y"
	runc $cmd
	if [[ $? -ne 0 ]]; then
	  	#remove fid if possible
	  	$c0rm $fid -y 2>> $log 	  		
	  	#bundle trace
	  	m0trace -Y -i $(ls m0trace.*) -o $(ls m0trace.*).yml
	  	tar -rvf $tar $(ls m0trace.*.yml)
	  	return 23
	fi
		  
	printf "\t [ OK ]\n" >> $out

	echo $(date)
	echo "+$(date)" >> $out
	echo "+$(date)" >> $log

	#move to working directory
	popd > /dev/null

	#success
	return 0
}

#main
if [[ "$#" -ne 2 ]]; then
    echo "illegal number of parameters"
    echo "$(basename $0) <block size> <filename>"
    echo "$(basename $0) 4096 ./128MB"
    exit
fi

#test
test $1 $2
echo $(stat -c%s "$2")	#filesize in bytes	


#success	
if [[ $? -eq 0 ]]; then
	echo "$(basename $0) $1 $2"
	echo "success!"
	exit
fi

#make executables
if [[ $? -lt 20 ]]; then
	echo "run make commands"
	echo "make fgen"
	echo "make"
	exit
fi

#bundle trace
if [[ $? -lt 30 ]]; then
	echo "$(basename $0) $1 $2"
	echo "failed!!"
	echo "compressing..."
	ls -a m0trace.*
	rm -f m0trace.*
	tar -tvf $tar
#	bzip2 $tar
#	echo "verifying..."
#	tar -jtvf "$tar.bz2"
#	ls -lh *.bz2
	echo "done!"
	exit
fi

echo "!!"
exit
